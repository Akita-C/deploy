services:
  api:
    build:
      context: ../Nemui
      dockerfile: Dockerfile
    container_name: nemui-api-staging
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ConnectionStrings__DefaultConnection=${CLOUD_DATABASE_URL}
      - Redis__EndPoint=${REDIS_ENDPOINT}
      - Redis__Port=${REDIS_PORT}
      - Redis__Username=${REDIS_USERNAME:-default}
      - Redis__Password=${REDIS_PASSWORD}
      - Redis__InstanceName=${REDIS_INSTANCE_NAME:-Akita-Staging:}
      - Redis__UseSsl=${REDIS_USE_SSL:-true}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER:-Nemui.Api}
      - JwtSettings__Audience=${JWT_AUDIENCE:-Nemui.Client}
      - JwtSettings__AccessTokenExpirationInMinutes=${JWT_ACCESS_TOKEN_EXPIRY_MINUTES:-15}
      - JwtSettings__RefreshTokenExpirationInDays=${JWT_REFRESH_TOKEN_EXPIRY_DAYS:-30}
      - Cloudinary__CloudName=${CLOUDINARY_CLOUD_NAME}
      - Cloudinary__ApiKey=${CLOUDINARY_API_KEY}
      - Cloudinary__ApiSecret=${CLOUDINARY_API_SECRET}
      - AISettings__ApiKey=${GEMINI_API_KEY}
      - AISettings__Model=${GEMINI_MODEL:-gemini-2.5-flash-lite-preview-06-17}
      - AuthSettings__MaxFailedLoginAttempts=${AUTH_MAX_FAILED_ATTEMPTS:-5}
      - AuthSettings__LockoutMinutes=${AUTH_LOCKOUT_MINUTES:-30}
      - AuthSettings__RequireEmailConfirmation=${AUTH_REQUIRE_EMAIL_CONFIRMATION:-false}
      - AdminSettings__SeedApiKey=${ADMIN_SEED_API_KEY}
      - AdminSettings__EnableSeedEndpoints=${ADMIN_ENABLE_SEED_ENDPOINTS:-false}
    ports:
      - "8080:8080"
    networks:
      - nemui-network
    volumes:
      - ./logs/api:/app/logs

  frontend:
    build:
      context: ../sutoresu
      dockerfile: Dockerfile
    container_name: nemui-frontend-staging
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost/api}  # URL của API backend qua Nginx
      - NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL:-http://localhost}  # URL của frontend
    ports:
      - "3000:3000"
    networks:
      - nemui-network
    depends_on:
      - api
    volumes:
      - ./logs/frontend:/app/logs

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine  # Sử dụng nginx image nhẹ nhất (alpine linux)
    container_name: nemui-nginx-staging
    restart: unless-stopped
    ports:
      - "80:80"    # HTTP port
      - "443:443"  # HTTPS port (nếu có SSL certificate)
    volumes:
      # Mount các file cấu hình nginx từ host vào container
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Main nginx config (read-only)
      - ./nginx/conf.d:/etc/nginx/conf.d:ro  # Server configurations (read-only)
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates (nếu có)
      - ./logs/nginx:/var/log/nginx  # Nginx access và error logs
    networks:
      - nemui-network
    depends_on:
      - api      # Nginx cần API và Frontend đã chạy
      - frontend
    healthcheck:
      # Kiểm tra nginx có serve health endpoint không
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  nemui-network:
    driver: bridge

volumes:
  logs:
    driver: local 