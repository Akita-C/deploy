# =================================================================
# üîí HTTPS SERVER CONFIGURATION (Port 443) - TEMPLATE
# =================================================================
# Purpose: Handle secure HTTPS traffic with SSL certificates
# Status: DISABLED - Uncomment when SSL certificates are ready

# server {
#     listen 443 ssl http2;
#     server_name staging.yourdomain.com;  # Change to your domain
# 
#     # -----------------------------------------------------------------
#     # üîê SSL Certificate Configuration
#     # -----------------------------------------------------------------
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;      # SSL certificate
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;    # Private key
#     ssl_session_cache shared:le_nginx_SSL:10m;         # Session cache
#     ssl_session_timeout 1440m;                         # 24 hours
#     ssl_protocols TLSv1.2 TLSv1.3;                     # Modern protocols only
#     ssl_prefer_server_ciphers off;                     # Let client choose
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
# 
#     # -----------------------------------------------------------------
#     # üõ°Ô∏è HTTPS Security Headers
#     # -----------------------------------------------------------------
#     add_header Strict-Transport-Security "max-age=63072000" always;  # HSTS
# 
#     # -----------------------------------------------------------------
#     # üìç Load Same Routes as HTTP
#     # -----------------------------------------------------------------
#     include /etc/nginx/routes/api.conf;        # API routes
#     include /etc/nginx/routes/frontend.conf;   # Frontend routes  
#     include /etc/nginx/routes/static.conf;     # Static file routes
# }

# =================================================================
# üöÄ TO ENABLE HTTPS:
# =================================================================
# 1. Obtain SSL certificates (Let's Encrypt, Cloudflare, etc.)
# 2. Mount certificates to /etc/nginx/ssl/ in docker-compose.yml
# 3. Update server_name to your actual domain
# 4. Uncomment the server block above
# 5. Test with: nginx -t && nginx -s reload
